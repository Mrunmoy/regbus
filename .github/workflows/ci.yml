name: ci

on:
  push:
    branches: [ main ]
    tags: [ 'v*.*.*' ]     # run on version tags too
  pull_request:
    branches: [ main ]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        compiler: [gcc, clang]

    steps:
      - uses: actions/checkout@v4

      - name: Set compiler
        run: |
          if [ "${{ matrix.compiler }}" = "clang" ]; then
            echo "CC=clang"  >> $GITHUB_ENV
            echo "CXX=clang++" >> $GITHUB_ENV
          else
            echo "CC=gcc"  >> $GITHUB_ENV
            echo "CXX=g++" >> $GITHUB_ENV
          fi

      - name: Install Ninja
        run: sudo apt-get update && sudo apt-get install -y ninja-build

      - name: Configure (RelWithDebInfo)
        run: |
          cmake -S . -B build -G Ninja \
            -DREGBUS_BUILD_TESTS=ON \
            -DREGBUS_BUILD_EXAMPLES=ON \
            -DCMAKE_BUILD_TYPE=RelWithDebInfo

      - name: Build
        run: cmake --build build -j

      - name: Run tests
        run: ctest --test-dir build --output-on-failure

      # ---- package & publish only once (gcc leg) ----

      - name: Package headers (gcc only)
        if: ${{ matrix.compiler == 'gcc' }}
        run: |
          cd build
          mkdir -p dist
          cmake --install . --prefix dist || true
          cd ..
          zip -r regbus-headers.zip include LICENSE README.md CMakeLists.txt

      - name: Upload artifact (gcc only)
        if: ${{ matrix.compiler == 'gcc' }}
        uses: actions/upload-artifact@v4
        with:
          name: regbus-headers
          path: regbus-headers.zip

      - name: Publish GitHub Release (on tag, gcc only)
        if: ${{ startsWith(github.ref, 'refs/tags/') && matrix.compiler == 'gcc' }}
        uses: softprops/action-gh-release@v2
        with:
          files: regbus-headers.zip
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
